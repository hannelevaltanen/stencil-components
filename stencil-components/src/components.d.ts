/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface RdsButton {
        /**
          * Is the button disabled?
         */
        "disabled"?: boolean;
        /**
          * Is the button full width?
         */
        "fullWidth"?: boolean;
        /**
          * How large should the button be?
         */
        "size"?: "small" | "medium" | "large";
        /**
          * What type of button is this?
         */
        "type"?: "button" | "submit" | "reset";
        /**
          * What variant to use?
         */
        "variant"?: | "primary"
    | "secondary"
    | "tertiary"
    | "danger"
    | "success"
    | "link";
    }
    interface RdsDialog {
        /**
          * Is the dialog open?
         */
        "closable": boolean;
        /**
          * Props
         */
        "heading": string;
        /**
          * Is the dialog open?
         */
        "isOpen": boolean;
        /**
          * What size?
         */
        "size"?: | "large"
  | "medium"
  | "small";
        /**
          * What variant to use?
         */
        "variant"?: | "primary"
   | "secondary"
   | "tertiary"
   | "danger"
   | "success"
   | "link";
    }
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLRdsButtonElement extends Components.RdsButton, HTMLStencilElement {
    }
    var HTMLRdsButtonElement: {
        prototype: HTMLRdsButtonElement;
        new (): HTMLRdsButtonElement;
    };
    interface HTMLRdsDialogElement extends Components.RdsDialog, HTMLStencilElement {
    }
    var HTMLRdsDialogElement: {
        prototype: HTMLRdsDialogElement;
        new (): HTMLRdsDialogElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "rds-button": HTMLRdsButtonElement;
        "rds-dialog": HTMLRdsDialogElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface RdsButton {
        /**
          * Is the button disabled?
         */
        "disabled"?: boolean;
        /**
          * Is the button full width?
         */
        "fullWidth"?: boolean;
        /**
          * How large should the button be?
         */
        "size"?: "small" | "medium" | "large";
        /**
          * What type of button is this?
         */
        "type"?: "button" | "submit" | "reset";
        /**
          * What variant to use?
         */
        "variant"?: | "primary"
    | "secondary"
    | "tertiary"
    | "danger"
    | "success"
    | "link";
    }
    interface RdsDialog {
        /**
          * Is the dialog open?
         */
        "closable"?: boolean;
        /**
          * Props
         */
        "heading"?: string;
        /**
          * Is the dialog open?
         */
        "isOpen"?: boolean;
        /**
          * What size?
         */
        "size"?: | "large"
  | "medium"
  | "small";
        /**
          * What variant to use?
         */
        "variant"?: | "primary"
   | "secondary"
   | "tertiary"
   | "danger"
   | "success"
   | "link";
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "rds-button": RdsButton;
        "rds-dialog": RdsDialog;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "rds-button": LocalJSX.RdsButton & JSXBase.HTMLAttributes<HTMLRdsButtonElement>;
            "rds-dialog": LocalJSX.RdsDialog & JSXBase.HTMLAttributes<HTMLRdsDialogElement>;
        }
    }
}
